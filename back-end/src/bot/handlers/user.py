from aiogram import Router, Bot, F
from aiogram.types import Message, WebAppInfo, LabeledPrice, PreCheckoutQuery
from aiogram.filters.command import CommandStart, CommandObject, Command
from aiogram.utils.keyboard import InlineKeyboardBuilder 

from auth.models import User, Promo
from games.models import Game

from datetime import datetime, timedelta, timezone

from config import TelegramSettings

async def start(message: Message):
    builder = InlineKeyboardBuilder()
    builder.button(text="–ù–∞—á–∞—Ç—å! üß©", web_app=WebAppInfo(url=TelegramSettings.app_url))
    response = (
        "üëã –ü—Ä–∏–≤–µ—Å—Ç–≤—É—é –≤ –±–æ—Ç–µ –ó–æ–ª—Ç–∞–Ω–∞!\n"
        "_–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!_"
    )
    await message.answer(response, reply_markup=builder.as_markup())

async def start_buy_game(message: Message, command: CommandObject, user: User):
    game_id = command.args
    game = await Game.get_or_none(id=game_id).prefetch_related("users")
    if not game:
        return await message.answer("Error.")
    if user in game.users:
        return await message.answer("ü¶∫ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∏–≥—Ä–∞")
    promo = (await user.promos.all())
    price = game.price
    if len(promo) > 0:
        price = game.price * (promo[0].discount) / 100
        await user.promos_used.add(promo[0])
        await user.promos.remove(promo[0])
    prices = [LabeledPrice(label=game.name, amount=int(price * 100))]
    await message.answer_invoice(
        title=f"–ü–æ–∫—É–ø–∫–∞ –∏–≥—Ä—ã: {game.name}",
        description=f"–û–ø–∏—Å–∞–Ω–∏–µ –∏–≥—Ä—ã: {game.description}",
        payload=f"buy-game:{game.id}",
        provider_token=TelegramSettings.provider_token,
        currency="RUB",
        prices=prices
    )

async def enter_promo(message: Message, user: User, command: CommandObject):
    code = command.args
    if not code:
        return await message.answer("–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥!")
    promo = await Promo.get_or_none(code=code)
    await user.fetch_related("promos_used")
    if not promo: return await message.answer("–ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
    if promo in await user.promos.all(): return await message.answer("–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥.")
    if promo in await user.promos_used.all(): return await message.answer("–í—ã —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º–æ–∫–æ–¥.")
    await user.promos.add(promo)
    await message.answer("–í—ã —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥!")

async def buy_subscription(message: Message, user: User):
    subscription = await user.subscription.first()
    if subscription.expire >= datetime.now(timezone.utc):
        return await message.answer("–í—ã —É–∂–µ –∏–º–µ–µ—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É!")
    prices = [LabeledPrice(label="–ü–æ–¥–ø–∏—Å–∫–∞", amount=100000)]
    await message.answer_invoice(
        title=f"–ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ 7 –¥–Ω–µ–π",
        description=f"–ü–æ–∫—É–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ 7 –¥–Ω–µ–π",
        payload="buy-subscription",
        provider_token=TelegramSettings.provider_token,
        currency="RUB",
        prices=prices
    )

async def process_pre_checkout_query(pre_checkout_query: PreCheckoutQuery, bot: Bot):
    await bot.answer_pre_checkout_query(pre_checkout_query.id, ok=True)

async def process_successfull_payment_subscription(message: Message, user: User):
    subscription = await user.subscription.first()
    subscription.expire += timedelta(days=7)
    await subscription.save()
    builder = InlineKeyboardBuilder()
    builder.button(text="–û—Ç–∫—Ä—ã—Ç—å –∏ –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å! üöÄ", web_app=WebAppInfo(url=TelegramSettings.app_url))
    await message.answer("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–∏–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É! –ó–∞–π–¥–∏—Ç–µ –≤ –∏–≥—Ä—É!", reply_markup=builder.as_markup())

async def process_successfull_payment(message: Message, user: User):
    game_id = message.successful_payment.invoice_payload.split(":")[-1]
    game = await Game.get_or_none(id=game_id)
    await game.users.add(user)
    builder = InlineKeyboardBuilder()
    builder.button(text="–û—Ç–∫—Ä—ã—Ç—å –∏ –Ω–∞—á–∞—Ç—å –∏–≥—Ä–∞—Ç—å! üöÄ", web_app=WebAppInfo(url=TelegramSettings.app_url))
    await message.answer("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∫—É–ø–∏–ª–∏ –∏–≥—Ä—É! –ó–∞–π–¥–∏—Ç–µ –≤ –∏–≥—Ä—É!", reply_markup=builder.as_markup())

def register_user_handlers(router: Router):
    router.message.register(start_buy_game, CommandStart(deep_link=True))
    router.message.register(start, CommandStart())
    router.message.register(
        process_successfull_payment,
        F.successful_payment, 
        F.successful_payment.invoice_payload.startswith("buy-game")
    )
    router.message.register(
        process_successfull_payment_subscription,
        F.successful_payment, 
        F.successful_payment.invoice_payload.startswith("buy-subscription")
    )
    router.message.register(
        buy_subscription,
        Command("sub")
    )
    router.message.register(
        enter_promo,
        Command("promo")
    )
    router.pre_checkout_query.register(process_pre_checkout_query)

